[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
variable_offset : 5.0
variable_samples : 3
variable_min_probe_count : 3
variable_probe_count_scale_factor : 1.0
gcode:
  SET_STATUS STATUS="meshing"

  {% if params.AREA_START and params.AREA_END %}
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set xSafeMin, ySafeMin = bedMeshConfig.mesh_min.split(",")|map('float') %}
    {% set xSafeMax, ySafeMax = bedMeshConfig.mesh_max.split(",")|map('float') %}
    {% set xMin, yMin = params.AREA_START.split(",")|map('float') %}
    {% set xMax, yMax = params.AREA_END.split(",")|map('float') %}
    {% set xMaxProbe, yMaxProbe = bedMeshConfig.probe_count.split(",")|map('int') %}

    {% if (xMin < xMax) and (yMin < yMax) %}
      {% set xMin = [(xMin - offset), xSafeMin]|max %}
      {% set yMin = [(yMin - offset), ySafeMin]|max %}
      {% set xMax = [(xMax + offset), xSafeMax]|min %}
      {% set yMax = [(yMax + offset), ySafeMax]|min %}
      {% set xProbe = [[(xMaxProbe * (xMax - xMin) / (xSafeMax - xSafeMin) * probe_count_scale_factor)|round(0)|int, min_probe_count]|max, xMaxProbe]|min %}
      {% set yProbe = [[(yMaxProbe * (yMax - yMin) / (ySafeMax - ySafeMin) * probe_count_scale_factor)|round(0)|int, min_probe_count]|max, yMaxProbe]|min %}
      {% set refIndex = ((xProbe * yProbe) / 2)|round(0)|int %}
 
      BED_MESH_CALIBRATE_BASE mesh_min={xMin},{yMin} mesh_max={xMax},{yMax} probe_count={xProbe},{yProbe} samples={samples|int} relative_reference_index={refIndex}
    {% else %}
      BED_MESH_CALIBRATE_BASE
    {% endif %}
  {% else %}
    BED_MESH_CALIBRATE_BASE
  {% endif %}

  SET_STATUS STATUS="ready"
