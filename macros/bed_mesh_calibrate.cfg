[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
variable_mesh_area_offset : 5.0
variable_probe_samples : 3
variable_min_probe_count : 3
variable_probe_count_scale_factor : 1.0
gcode:
  SET_STATUS STATUS="meshing"

  {% if params.AREA_START and params.AREA_END %}
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    {% set area_min_x = params.AREA_START.split(",")[0]|float %}
    {% set area_min_y = params.AREA_START.split(",")[1]|float %}
    {% set area_max_x = params.AREA_END.split(",")[0]|float %}
    {% set area_max_y = params.AREA_END.split(",")[1]|float %}
    {% set meshMaxPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set meshMaxPointY = bedMeshConfig.probe_count.split(",")[bedMeshConfig.probe_count.split(",")|length == 2]|int %}

    {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
      {% set area_min_x = [area_min_x - mesh_area_offset, safe_min_x]|max %}
      {% set area_min_y = [area_min_y - mesh_area_offset, safe_min_y]|max %}
      {% set area_max_x = [area_max_x + mesh_area_offset, safe_max_x]|min %}
      {% set area_max_y = [area_max_y + mesh_area_offset, safe_max_y]|min %}
      {% set meshPointX = [[(meshMaxPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int, min_probe_count]|max, meshMaxPointX]|min %}
      {% set meshPointY = [[(meshMaxPointY * (area_max_y - area_min_y) / (safe_max_y - safe_min_y) * probe_count_scale_factor)|round(0)|int, min_probe_count]|max, meshMaxPointY]|min %}
 
      BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
    {% else %}
      BED_MESH_CALIBRATE_BASE
    {% endif %}
  {% else %}
    BED_MESH_CALIBRATE_BASE
  {% endif %}

  SET_STATUS STATUS="ready"
